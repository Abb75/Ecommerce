{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Alexandre Brosseau\\\\Desktop\\\\Ecommerce\\\\Frontend\\\\eshop\\\\src\\\\components\\\\Payment\\\\payment.js\",\n    _s = $RefreshSig$();\n\nimport { maxWidth } from \"@mui/system\";\nimport \"./payment.css\";\nimport axios from \"axios\";\nimport { CreatePayment } from \"../../redux/actions/paymentAction\";\nimport React, { useState, useEffect } from \"react\";\nimport { API_URL } from \"../Stripe/StripeContainer\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Row, Col, ListGroup, Image, Button, FormControl, Form } from \"react-bootstrap\";\nimport { CardElement, useStripe, useElements, PaymentElement } from \"@stripe/react-stripe-js\";\nimport { Link } from \"react-router-dom\";\nimport { payOrder } from \"../../redux/actions/orderActions\";\nimport { SendErrorNotification, SendSuccessNotification } from \"../Alerts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Payment = () => {\n  _s();\n\n  var _orderUser$, _orderUser$2;\n\n  const stripe = useStripe();\n  const elements = useElements();\n  const [isLoading, setIsLoading] = useState(false);\n  const [message, setMessage] = useState(null);\n  const cart = useSelector(state => state.cart);\n  const {\n    cartItems\n  } = cart;\n  const orderCreate = useSelector(state => state.orderCreate);\n  const {\n    orderUser\n  } = orderCreate;\n  const orderId = orderUser === null || orderUser === void 0 ? void 0 : (_orderUser$ = orderUser[0]) === null || _orderUser$ === void 0 ? void 0 : _orderUser$.id; //const name = orderUser?.[0]?.user.email\n\n  const totalPrice = orderUser === null || orderUser === void 0 ? void 0 : (_orderUser$2 = orderUser[0]) === null || _orderUser$2 === void 0 ? void 0 : _orderUser$2.totalPrice;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const dispatch = useDispatch();\n  const [error, setError] = useState(null);\n  const [email, setEmail] = useState('');\n  useEffect(() => {\n    if (!stripe) {\n      return;\n    }\n\n    const clientSecret = new URLSearchParams(window.location.search).get(\"payment_intent_client_secret\");\n\n    if (!clientSecret) {\n      return;\n    }\n\n    stripe.retrievePaymentIntent(clientSecret).then(_ref => {\n      let {\n        paymentIntent\n      } = _ref;\n\n      switch (paymentIntent.status) {\n        case \"succeeded\":\n          SendSuccessNotification('Payment success');\n          break;\n\n        case \"processing\":\n          setMessage(\"Your payment is processing.\");\n          break;\n\n        case \"requires_payment_method\":\n          setMessage(\"Your payment was not successful, please try again.\");\n          break;\n\n        default:\n          setMessage(\"Something went wrong.\");\n          SendErrorNotification('Something went wrong.');\n          break;\n      }\n    });\n  }, [stripe]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n\n    setIsLoading(true);\n    const {\n      error\n    } = await stripe.confirmPayment({\n      elements,\n      confirmParams: {\n        // Make sure to change this to your payment completion page\n        return_url: \"http://localhost:3000\"\n      }\n    }, dispatch(payOrder(orderId))); // This point will only be reached if there is an immediate error when\n    // confirming the payment. Otherwise, your customer will be redirected to\n    // your `return_url`. For some payment methods like iDEAL, your customer will\n    // be redirected to an intermediate site first to authorize the payment, then\n    // redirected to the `return_url`.\n\n    if (error.type === \"card_error\" || error.type === \"validation_error\") {\n      setMessage(error.message);\n    } else {\n      setMessage(\"An unexpected error occurred.\");\n    }\n\n    SendSuccessNotification('Payment success');\n    setIsLoading(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"payment-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(PaymentElement, {\n      id: \"payment-element\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: isLoading || !stripe || !elements,\n      id: \"submit\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"button-text\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\",\n          id: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 32\n        }, this) : \"Pay now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"payment-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Payment, \"pfBBAIr8c2kI+tWzbhFYOjFc+uU=\", false, function () {\n  return [useStripe, useElements, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = Payment;\nexport default Payment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Payment\");","map":{"version":3,"names":["maxWidth","axios","CreatePayment","React","useState","useEffect","API_URL","useDispatch","useSelector","Row","Col","ListGroup","Image","Button","FormControl","Form","CardElement","useStripe","useElements","PaymentElement","Link","payOrder","SendErrorNotification","SendSuccessNotification","Payment","stripe","elements","isLoading","setIsLoading","message","setMessage","cart","state","cartItems","orderCreate","orderUser","orderId","id","totalPrice","userLogin","userInfo","dispatch","error","setError","email","setEmail","clientSecret","URLSearchParams","window","location","search","get","retrievePaymentIntent","then","paymentIntent","status","handleSubmit","e","preventDefault","confirmPayment","confirmParams","return_url","type"],"sources":["C:/Users/Alexandre Brosseau/Desktop/Ecommerce/Frontend/eshop/src/components/Payment/payment.js"],"sourcesContent":["import { maxWidth } from \"@mui/system\";\r\nimport \"./payment.css\";\r\nimport axios from \"axios\"\r\nimport { CreatePayment } from \"../../redux/actions/paymentAction\";\r\nimport React, { useState, useEffect,  } from \"react\";\r\nimport { API_URL } from \"../Stripe/StripeContainer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Row ,Col, ListGroup, Image, Button, FormControl, Form} from \"react-bootstrap\";\r\nimport { CardElement, useStripe, useElements, PaymentElement } from \"@stripe/react-stripe-js\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { payOrder } from \"../../redux/actions/orderActions\";\r\nimport { SendErrorNotification, SendSuccessNotification } from \"../Alerts\";\r\n\r\nconst Payment = () => {\r\n\r\n    const stripe = useStripe()\r\n    const elements = useElements()\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [message, setMessage] = useState(null);\r\n    const cart = useSelector(state => state.cart)\r\n    const {cartItems} = cart\r\n  \r\n    \r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const {orderUser} = orderCreate\r\n    const orderId = orderUser?.[0]?.id\r\n    \r\n    //const name = orderUser?.[0]?.user.email\r\n  \r\n    const totalPrice = orderUser?.[0]?.totalPrice\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} =  userLogin\r\n    const dispatch = useDispatch()\r\n    const [error, setError] = useState(null);\r\n    const [email, setEmail] = useState('');\r\n\r\n    \r\n\r\n    \r\n\r\n      useEffect(() => {\r\n        if (!stripe) {\r\n          return;\r\n        }\r\n    \r\n        const clientSecret = new URLSearchParams(window.location.search).get(\r\n          \"payment_intent_client_secret\"\r\n        );\r\n    \r\n        if (!clientSecret) {\r\n          return;\r\n        }\r\n    \r\n        stripe.retrievePaymentIntent(clientSecret).then(({ paymentIntent }) => {\r\n          switch (paymentIntent.status) {\r\n            case \"succeeded\":\r\n              SendSuccessNotification('Payment success')\r\n              break;\r\n            case \"processing\":\r\n              setMessage(\"Your payment is processing.\");\r\n              break;\r\n            case \"requires_payment_method\":\r\n              setMessage(\"Your payment was not successful, please try again.\");\r\n              break;\r\n            default:\r\n              setMessage(\"Something went wrong.\");\r\n              SendErrorNotification('Something went wrong.')\r\n              break;\r\n          }\r\n        });\r\n      }, [stripe]);\r\n  \r\n\r\n      const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n    \r\n        if (!stripe || !elements) {\r\n          // Stripe.js has not yet loaded.\r\n          // Make sure to disable form submission until Stripe.js has loaded.\r\n          return;\r\n        }\r\n    \r\n        setIsLoading(true);\r\n    \r\n        const { error } = await stripe.confirmPayment({\r\n          elements,\r\n          confirmParams: {\r\n            // Make sure to change this to your payment completion page\r\n            \r\n            return_url: \"http://localhost:3000\",\r\n           \r\n          }, \r\n        } , dispatch(payOrder(orderId)),);\r\n    \r\n        // This point will only be reached if there is an immediate error when\r\n        // confirming the payment. Otherwise, your customer will be redirected to\r\n        // your `return_url`. For some payment methods like iDEAL, your customer will\r\n        // be redirected to an intermediate site first to authorize the payment, then\r\n        // redirected to the `return_url`.\r\n        if (error.type === \"card_error\" || error.type === \"validation_error\") {\r\n          setMessage(error.message);\r\n        } else {\r\n          setMessage(\"An unexpected error occurred.\");\r\n        }\r\n        \r\n        SendSuccessNotification('Payment success')\r\n        \r\n        setIsLoading(false);\r\n      };\r\n    \r\n\r\n   \r\n\r\n\r\n    \r\n\r\n        return (\r\n            <form id=\"payment-form\" onSubmit={handleSubmit}>\r\n              <PaymentElement id=\"payment-element\" />\r\n              <button disabled={isLoading || !stripe || !elements} id=\"submit\">\r\n                <span id=\"button-text\">\r\n                  {isLoading ? <div className=\"spinner\" id=\"spinner\"></div> : \"Pay now\"}\r\n                </span>\r\n              </button>\r\n              {/* Show any error or success messages */}\r\n              {message && <div id=\"payment-message\">{message}</div>}\r\n            </form>\r\n          );\r\n        }\r\n    \r\n\r\n\r\n \r\n  \r\n \r\n\r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n            \r\n\r\n   \r\n\r\nexport default Payment"],"mappings":"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"},"metadata":{},"sourceType":"module"}