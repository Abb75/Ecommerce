{"ast":null,"code":"import axios from \"axios\";\nimport { CART_REMOVE_ALL_ITEM } from \"../constants/cartConstants\";\nimport { USER_ORDER_SUCCESS, USER_ORDER_REQUEST, USER_ORDER_FAIL, USER_ORDER_EMPTY, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAIL, ORDER_DETAILS_EMPTY, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_FAIL, ORDER_LIST_MY_EMPTY } from \"../constants/orderConstants\";\nexport const createOrderUser = order => async (dispatch, getState) => {\n  console.log(order.user);\n\n  try {\n    dispatch({\n      type: USER_ORDER_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`http://127.0.0.1:8000/api/order/add/`, order, config);\n    dispatch({\n      type: USER_ORDER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_ORDER_FAIL,\n      payload: error.response\n    });\n  }\n};\nexport const payOrder = id => async (dispatch, getState) => {\n  console.log(id);\n\n  try {\n    var _orderUser$;\n\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      orderCreate: {\n        orderUser\n      }\n    } = getState();\n    const userId = orderUser === null || orderUser === void 0 ? void 0 : (_orderUser$ = orderUser[0]) === null || _orderUser$ === void 0 ? void 0 : _orderUser$.user;\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`http://127.0.0.1:8000/api/order/${id}/pay/`, userId, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: CART_REMOVE_ALL_ITEM\n    });\n    dispatch({\n      type: USER_ORDER_EMPTY\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error.response\n    });\n  }\n};\nexport const removeOrderData = dispatch => {\n  dispatch({\n    type: USER_ORDER_EMPTY\n  });\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  console.log(id);\n\n  try {\n    var _orderUser$2;\n\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      orderCreate: {\n        orderUser\n      }\n    } = getState();\n    const userId = orderUser === null || orderUser === void 0 ? void 0 : (_orderUser$2 = orderUser[0]) === null || _orderUser$2 === void 0 ? void 0 : _orderUser$2.user;\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`http://127.0.0.1:8000/api/order/${id}/`, config, userId);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response\n    });\n  }\n};\nexport const getOrderList = () => async (dispatch, getState) => {\n  try {\n    var _orderUser$3;\n\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      orderCreate: {\n        orderUser\n      }\n    } = getState();\n    const userId = orderUser === null || orderUser === void 0 ? void 0 : (_orderUser$3 = orderUser[0]) === null || _orderUser$3 === void 0 ? void 0 : _orderUser$3.user;\n    const getUserId = userInfo === null || userInfo === void 0 ? void 0 : userInfo.id;\n    console.log(getUserId);\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`http://127.0.0.1:8000/api/order/order_history/`, config, getUserId);\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: error.response\n    });\n  }\n};\nexport const getAllOrderItemsByOrder = id => async (dispatch, getState) => {\n  console.log(id);\n\n  try {\n    var _orderUser$4;\n\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      orderCreate: {\n        orderUser\n      }\n    } = getState();\n    const userId = orderUser === null || orderUser === void 0 ? void 0 : (_orderUser$4 = orderUser[0]) === null || _orderUser$4 === void 0 ? void 0 : _orderUser$4.user;\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`http://127.0.0.1:8000/api/order/${id}/`, config, userId);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: error.response\n    });\n  }\n};","map":{"version":3,"names":["axios","CART_REMOVE_ALL_ITEM","USER_ORDER_SUCCESS","USER_ORDER_REQUEST","USER_ORDER_FAIL","USER_ORDER_EMPTY","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_DETAILS_EMPTY","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_EMPTY","createOrderUser","order","dispatch","getState","console","log","user","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","response","payOrder","id","orderCreate","orderUser","userId","put","removeOrderData","getOrderDetails","get","getOrderList","getUserId","getAllOrderItemsByOrder"],"sources":["C:/Users/Alexandre Brosseau/Desktop/drf_react_eshop/eshop/src/redux/actions/orderActions.js"],"sourcesContent":["import axios from \"axios\"\r\nimport { CART_REMOVE_ALL_ITEM } from \"../constants/cartConstants\"\r\n\r\nimport { USER_ORDER_SUCCESS,\r\n        USER_ORDER_REQUEST,\r\n        USER_ORDER_FAIL,\r\n        USER_ORDER_EMPTY,\r\n\r\n        ORDER_PAY_REQUEST,\r\n        ORDER_PAY_SUCCESS,\r\n        ORDER_PAY_FAIL,\r\n\r\n        ORDER_DETAILS_REQUEST,\r\n        ORDER_DETAILS_SUCCESS,\r\n        ORDER_DETAILS_FAIL,\r\n        ORDER_DETAILS_EMPTY,\r\n\r\n\r\n        ORDER_LIST_MY_SUCCESS,\r\n        ORDER_LIST_MY_REQUEST,\r\n        ORDER_LIST_MY_FAIL,\r\n        ORDER_LIST_MY_EMPTY\r\n\r\n\r\n\r\n} from \"../constants/orderConstants\"\r\n\r\nexport const createOrderUser =  (order) => async(dispatch, getState) => {\r\n    console.log(order.user)\r\n    try{\r\n        dispatch({ type: USER_ORDER_REQUEST})\r\n        const {userLogin: {userInfo},} = getState()\r\n      \r\n      \r\n       \r\n        const config = {\r\n            headers: {\r\n                'Content-type':  'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n\r\n        } \r\n        const {data} = await axios.post(`http://127.0.0.1:8000/api/order/add/`, order, config)\r\n        \r\n\r\n        dispatch({\r\n            type: USER_ORDER_SUCCESS,\r\n            payload: data\r\n        })\r\n    }catch(error){\r\n        dispatch({\r\n            type : USER_ORDER_FAIL,\r\n            payload : error.response\r\n          \r\n        })\r\n    }\r\n\r\n\r\n}   \r\n\r\n\r\n\r\nexport const payOrder =  (id) => async(dispatch, getState) => {\r\n    console.log(id)\r\n    try{\r\n        dispatch({ type: ORDER_PAY_REQUEST})\r\n        const {userLogin: {userInfo},} = getState()\r\n        const {orderCreate: {orderUser},} = getState()\r\n        const userId = orderUser?.[0]?.user\r\n\r\n       \r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type':  'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`, \r\n               \r\n            }\r\n\r\n        }\r\n        const {data} = await axios.put(`http://127.0.0.1:8000/api/order/${id}/pay/`,\r\n        userId,\r\n        config)\r\n            \r\n        \r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_REMOVE_ALL_ITEM\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_ORDER_EMPTY\r\n        })\r\n\r\n        \r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type : ORDER_PAY_FAIL,\r\n            payload : error.response\r\n          \r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const removeOrderData = (dispatch) => {\r\n    dispatch({\r\n        type: USER_ORDER_EMPTY\r\n    })\r\n\r\n}\r\n\r\n\r\n\r\nexport const getOrderDetails =  (id) => async(dispatch, getState) => {\r\n    console.log(id)\r\n    try{\r\n        dispatch({ type: ORDER_DETAILS_REQUEST})\r\n        const {userLogin: {userInfo},} = getState()\r\n        const {orderCreate: {orderUser},} = getState()\r\n        const userId = orderUser?.[0]?.user\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type':  'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`, \r\n               \r\n            }\r\n\r\n        }\r\n        const {data} = await axios.get(`http://127.0.0.1:8000/api/order/${id}/`,config,\r\n        userId)\r\n            \r\n        \r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type : ORDER_DETAILS_FAIL,\r\n            payload : error.response\r\n          \r\n        })\r\n    }\r\n}\r\n\r\nexport const getOrderList =  () => async(dispatch, getState) => {\r\n    try{\r\n        dispatch({ type: ORDER_LIST_MY_REQUEST})\r\n        const {userLogin: {userInfo},} = getState()\r\n        const {orderCreate: {orderUser},} = getState()\r\n        const userId = orderUser?.[0]?.user\r\n        const getUserId = userInfo?.id\r\n        console.log(getUserId)\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type':  'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`, \r\n               \r\n            }\r\n\r\n        }\r\n        const {data} = await axios.get(`http://127.0.0.1:8000/api/order/order_history/`,config,\r\n        getUserId,\r\n       )\r\n            \r\n        \r\n\r\n        dispatch({\r\n            type: ORDER_LIST_MY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type : ORDER_LIST_MY_FAIL,\r\n            payload : error.response\r\n          \r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getAllOrderItemsByOrder =  (id) => async(dispatch, getState) => {\r\n    console.log(id)\r\n    try{\r\n        dispatch({ type: ORDER_DETAILS_REQUEST})\r\n        const {userLogin: {userInfo},} = getState()\r\n        const {orderCreate: {orderUser},} = getState()\r\n        const userId = orderUser?.[0]?.user\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-type':  'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`, \r\n               \r\n            }\r\n\r\n        }\r\n        const {data} = await axios.get(`http://127.0.0.1:8000/api/order/${id}/`,config,\r\n        userId)\r\n            \r\n        \r\n\r\n        dispatch({\r\n            type: ORDER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type : ORDER_DETAILS_FAIL,\r\n            payload : error.response\r\n          \r\n        })\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,QAAqC,4BAArC;AAEA,SAASC,kBAAT,EACQC,kBADR,EAEQC,eAFR,EAGQC,gBAHR,EAKQC,iBALR,EAMQC,iBANR,EAOQC,cAPR,EASQC,qBATR,EAUQC,qBAVR,EAWQC,kBAXR,EAYQC,mBAZR,EAeQC,qBAfR,EAgBQC,qBAhBR,EAiBQC,kBAjBR,EAkBQC,mBAlBR,QAsBO,6BAtBP;AAwBA,OAAO,MAAMC,eAAe,GAAKC,KAAD,IAAW,OAAMC,QAAN,EAAgBC,QAAhB,KAA6B;EACpEC,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,IAAlB;;EACA,IAAG;IACCJ,QAAQ,CAAC;MAAEK,IAAI,EAAErB;IAAR,CAAD,CAAR;IACA,MAAM;MAACsB,SAAS,EAAE;QAACC;MAAD;IAAZ,IAA2BN,QAAQ,EAAzC;IAIA,MAAMO,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,gBAAiB,kBADZ;QAELC,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;MAFnC;IADE,CAAf;IAOA,MAAM;MAACC;IAAD,IAAS,MAAM/B,KAAK,CAACgC,IAAN,CAAY,sCAAZ,EAAmDd,KAAnD,EAA0DS,MAA1D,CAArB;IAGAR,QAAQ,CAAC;MACLK,IAAI,EAAEtB,kBADD;MAEL+B,OAAO,EAAEF;IAFJ,CAAD,CAAR;EAIH,CApBD,CAoBC,OAAMG,KAAN,EAAY;IACTf,QAAQ,CAAC;MACLK,IAAI,EAAGpB,eADF;MAEL6B,OAAO,EAAGC,KAAK,CAACC;IAFX,CAAD,CAAR;EAKH;AAGJ,CA/BM;AAmCP,OAAO,MAAMC,QAAQ,GAAKC,EAAD,IAAQ,OAAMlB,QAAN,EAAgBC,QAAhB,KAA6B;EAC1DC,OAAO,CAACC,GAAR,CAAYe,EAAZ;;EACA,IAAG;IAAA;;IACClB,QAAQ,CAAC;MAAEK,IAAI,EAAElB;IAAR,CAAD,CAAR;IACA,MAAM;MAACmB,SAAS,EAAE;QAACC;MAAD;IAAZ,IAA2BN,QAAQ,EAAzC;IACA,MAAM;MAACkB,WAAW,EAAE;QAACC;MAAD;IAAd,IAA8BnB,QAAQ,EAA5C;IACA,MAAMoB,MAAM,GAAGD,SAAH,aAAGA,SAAH,sCAAGA,SAAS,CAAG,CAAH,CAAZ,gDAAG,YAAgBhB,IAA/B;IAIA,MAAMI,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,gBAAiB,kBADZ;QAELC,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;MAFnC;IADE,CAAf;IAQA,MAAM;MAACC;IAAD,IAAS,MAAM/B,KAAK,CAACyC,GAAN,CAAW,mCAAkCJ,EAAG,OAAhD,EACrBG,MADqB,EAErBb,MAFqB,CAArB;IAMAR,QAAQ,CAAC;MACLK,IAAI,EAAEjB,iBADD;MAEL0B,OAAO,EAAEF;IAFJ,CAAD,CAAR;IAKAZ,QAAQ,CAAC;MACLK,IAAI,EAAEvB;IADD,CAAD,CAAR;IAIAkB,QAAQ,CAAC;MACLK,IAAI,EAAEnB;IADD,CAAD,CAAR;EAMH,CArCD,CAqCC,OAAM6B,KAAN,EAAY;IACTf,QAAQ,CAAC;MACLK,IAAI,EAAGhB,cADF;MAELyB,OAAO,EAAGC,KAAK,CAACC;IAFX,CAAD,CAAR;EAKH;AAEJ,CA/CM;AAiDP,OAAO,MAAMO,eAAe,GAAIvB,QAAD,IAAc;EACzCA,QAAQ,CAAC;IACLK,IAAI,EAAEnB;EADD,CAAD,CAAR;AAIH,CALM;AASP,OAAO,MAAMsC,eAAe,GAAKN,EAAD,IAAQ,OAAMlB,QAAN,EAAgBC,QAAhB,KAA6B;EACjEC,OAAO,CAACC,GAAR,CAAYe,EAAZ;;EACA,IAAG;IAAA;;IACClB,QAAQ,CAAC;MAAEK,IAAI,EAAEf;IAAR,CAAD,CAAR;IACA,MAAM;MAACgB,SAAS,EAAE;QAACC;MAAD;IAAZ,IAA2BN,QAAQ,EAAzC;IACA,MAAM;MAACkB,WAAW,EAAE;QAACC;MAAD;IAAd,IAA8BnB,QAAQ,EAA5C;IACA,MAAMoB,MAAM,GAAGD,SAAH,aAAGA,SAAH,uCAAGA,SAAS,CAAG,CAAH,CAAZ,iDAAG,aAAgBhB,IAA/B;IAEA,MAAMI,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,gBAAiB,kBADZ;QAELC,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;MAFnC;IADE,CAAf;IAQA,MAAM;MAACC;IAAD,IAAS,MAAM/B,KAAK,CAAC4C,GAAN,CAAW,mCAAkCP,EAAG,GAAhD,EAAmDV,MAAnD,EACrBa,MADqB,CAArB;IAKArB,QAAQ,CAAC;MACLK,IAAI,EAAEd,qBADD;MAELuB,OAAO,EAAEF;IAFJ,CAAD,CAAR;EAKH,CAxBD,CAwBC,OAAMG,KAAN,EAAY;IACTf,QAAQ,CAAC;MACLK,IAAI,EAAGb,kBADF;MAELsB,OAAO,EAAGC,KAAK,CAACC;IAFX,CAAD,CAAR;EAKH;AACJ,CAjCM;AAmCP,OAAO,MAAMU,YAAY,GAAI,MAAM,OAAM1B,QAAN,EAAgBC,QAAhB,KAA6B;EAC5D,IAAG;IAAA;;IACCD,QAAQ,CAAC;MAAEK,IAAI,EAAEV;IAAR,CAAD,CAAR;IACA,MAAM;MAACW,SAAS,EAAE;QAACC;MAAD;IAAZ,IAA2BN,QAAQ,EAAzC;IACA,MAAM;MAACkB,WAAW,EAAE;QAACC;MAAD;IAAd,IAA8BnB,QAAQ,EAA5C;IACA,MAAMoB,MAAM,GAAGD,SAAH,aAAGA,SAAH,uCAAGA,SAAS,CAAG,CAAH,CAAZ,iDAAG,aAAgBhB,IAA/B;IACA,MAAMuB,SAAS,GAAGpB,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAEW,EAA5B;IACAhB,OAAO,CAACC,GAAR,CAAYwB,SAAZ;IAEA,MAAMnB,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,gBAAiB,kBADZ;QAELC,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;MAFnC;IADE,CAAf;IAQA,MAAM;MAACC;IAAD,IAAS,MAAM/B,KAAK,CAAC4C,GAAN,CAAW,gDAAX,EAA2DjB,MAA3D,EACrBmB,SADqB,CAArB;IAMA3B,QAAQ,CAAC;MACLK,IAAI,EAAEX,qBADD;MAELoB,OAAO,EAAEF;IAFJ,CAAD,CAAR;EAKH,CA3BD,CA2BC,OAAMG,KAAN,EAAY;IACTf,QAAQ,CAAC;MACLK,IAAI,EAAGT,kBADF;MAELkB,OAAO,EAAGC,KAAK,CAACC;IAFX,CAAD,CAAR;EAKH;AACJ,CAnCM;AAsCP,OAAO,MAAMY,uBAAuB,GAAKV,EAAD,IAAQ,OAAMlB,QAAN,EAAgBC,QAAhB,KAA6B;EACzEC,OAAO,CAACC,GAAR,CAAYe,EAAZ;;EACA,IAAG;IAAA;;IACClB,QAAQ,CAAC;MAAEK,IAAI,EAAEf;IAAR,CAAD,CAAR;IACA,MAAM;MAACgB,SAAS,EAAE;QAACC;MAAD;IAAZ,IAA2BN,QAAQ,EAAzC;IACA,MAAM;MAACkB,WAAW,EAAE;QAACC;MAAD;IAAd,IAA8BnB,QAAQ,EAA5C;IACA,MAAMoB,MAAM,GAAGD,SAAH,aAAGA,SAAH,uCAAGA,SAAS,CAAG,CAAH,CAAZ,iDAAG,aAAgBhB,IAA/B;IAEA,MAAMI,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,gBAAiB,kBADZ;QAELC,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;MAFnC;IADE,CAAf;IAQA,MAAM;MAACC;IAAD,IAAS,MAAM/B,KAAK,CAAC4C,GAAN,CAAW,mCAAkCP,EAAG,GAAhD,EAAmDV,MAAnD,EACrBa,MADqB,CAArB;IAKArB,QAAQ,CAAC;MACLK,IAAI,EAAEd,qBADD;MAELuB,OAAO,EAAEF;IAFJ,CAAD,CAAR;EAKH,CAxBD,CAwBC,OAAMG,KAAN,EAAY;IACTf,QAAQ,CAAC;MACLK,IAAI,EAAGb,kBADF;MAELsB,OAAO,EAAGC,KAAK,CAACC;IAFX,CAAD,CAAR;EAKH;AACJ,CAjCM"},"metadata":{},"sourceType":"module"}