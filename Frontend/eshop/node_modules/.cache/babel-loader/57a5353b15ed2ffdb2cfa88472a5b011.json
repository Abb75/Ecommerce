{"ast":null,"code":"import { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_SUCCESS, USER_REGISTER_REQUEST, USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS, USER_DETAILS_FAIL, USER_DETAILS_LOGOUT, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_RESET, USER_UPDATE_PROFILE_SUCCESS } from \"../constants/userConstants\";\nimport axiosInstance from \"../../axios\";\nimport axios from \"axios\";\nimport { CART_REMOVE_ALL_ITEM } from \"../constants/cartConstants\";\nimport { USER_ORDER_EMPTY } from \"../constants/orderConstants\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const {\n      data\n    } = await axiosInstance.post(`http://127.0.0.1:8000/api/token/`, {\n      email: email,\n      password: password\n    });\n    localStorage.setItem('access_token', data.access);\n    localStorage.setItem('refresh_token', data.refresh);\n    axiosInstance.defaults.headers['Authorization'] = 'JWT' + localStorage.getItem('access_token');\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      error: error.response.data.detail //&& error.response.data.detail\n      // ? error.response.data.detail : error.message\n\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGOUT\n    });\n    const response = axiosInstance.post('http://127.0.0.1:8000/api/user/logout/blacklist/', {\n      refresh_token: localStorage.getItem('refresh_token')\n    });\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('refresh_token');\n    axiosInstance.defaults.headers['Authorization'] = null;\n    dispatch({\n      type: USER_DETAILS_LOGOUT\n    });\n    dispatch({\n      type: CART_REMOVE_ALL_ITEM\n    });\n    dispatch({\n      type: USER_ORDER_EMPTY\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const register = (email, first_name, last_name, address, postcode, phone, city, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const {\n      data\n    } = axiosInstance.post(`http://127.0.0.1:8000/api/user/register/`, {\n      email: email,\n      first_name: first_name,\n      last_name: last_name,\n      password: password,\n      address: address,\n      phone: phone,\n      city: city,\n      postcode: parseInt(postcode)\n    });\n    console.log(data);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n      payload: {\n        email,\n        password\n      }\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      error: error.response.data && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};\nexport const getUsersDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    console.log(config);\n    const {\n      data\n    } = await axios.get(`http://127.0.0.1:8000/api/user/${id}/`, config);\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL\n    });\n  }\n};\nexport const updateUsersProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    console.log(userInfo.token);\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`http://127.0.0.1:8000/api/user/account-update/`, user, config);\n    console.log(data);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response.data\n    });\n  }\n};\nexport const removeUserUpdateProfile = dispatch => {\n  dispatch({\n    type: USER_ORDER_EMPTY\n  });\n};","map":{"version":3,"names":["USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_SUCCESS","USER_REGISTER_REQUEST","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_LOGOUT","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_RESET","USER_UPDATE_PROFILE_SUCCESS","axiosInstance","axios","CART_REMOVE_ALL_ITEM","USER_ORDER_EMPTY","login","email","password","dispatch","type","data","post","localStorage","setItem","access","refresh","defaults","headers","getItem","payload","error","response","detail","logout","refresh_token","removeItem","console","log","register","first_name","last_name","address","postcode","phone","city","parseInt","message","getUsersDetails","id","getState","userLogin","userInfo","config","Authorization","token","get","updateUsersProfile","user","put","removeUserUpdateProfile"],"sources":["C:/Users/Alexandre Brosseau/Desktop/drf_react_eshop/eshop/src/redux/actions/userActions.js"],"sourcesContent":["import { USER_LOGIN_FAIL,\r\n     USER_LOGIN_REQUEST, \r\n     USER_LOGIN_SUCCESS, \r\n     USER_LOGOUT,\r\n\r\n     USER_REGISTER_FAIL,\r\n     USER_REGISTER_SUCCESS,\r\n     USER_REGISTER_REQUEST,\r\n\r\n     USER_DETAILS_REQUEST,\r\n     USER_DETAILS_SUCCESS,\r\n     USER_DETAILS_FAIL,\r\n     USER_DETAILS_LOGOUT,\r\n\r\n     USER_UPDATE_PROFILE_FAIL,\r\n     USER_UPDATE_PROFILE_REQUEST,\r\n     USER_UPDATE_PROFILE_RESET,\r\n     USER_UPDATE_PROFILE_SUCCESS\r\n    \r\n} from \"../constants/userConstants\"\r\n\r\nimport axiosInstance from \"../../axios\";\r\nimport axios from \"axios\";\r\nimport { CART_REMOVE_ALL_ITEM } from \"../constants/cartConstants\";\r\nimport { USER_ORDER_EMPTY } from \"../constants/orderConstants\";\r\n\r\n\r\nexport const login = (email, password) => async(dispatch) => { \r\n    try {\r\n        dispatch({\r\n        type: USER_LOGIN_REQUEST\r\n    })\r\n    const {data} = await  axiosInstance.post(`http://127.0.0.1:8000/api/token/`, {\r\n        email: email,\r\n        password: password\r\n        })\r\n            localStorage.setItem('access_token', data.access);\r\n            localStorage.setItem('refresh_token', data.refresh);   \r\n            axiosInstance.defaults.headers['Authorization'] = \r\n                'JWT' + localStorage.getItem('access_token'); \r\n       dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data \r\n           \r\n       }\r\n      )\r\n\r\n    } catch(error){\r\n       \r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            error: error.response.data.detail //&& error.response.data.detail\r\n           // ? error.response.data.detail : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => async(dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_LOGOUT,\r\n        })\r\n        const response = axiosInstance.post('http://127.0.0.1:8000/api/user/logout/blacklist/', {\r\n            refresh_token : localStorage.getItem('refresh_token') , \r\n            \r\n        });\r\n            localStorage.removeItem('access_token');\r\n            localStorage.removeItem('refresh_token');\r\n        \r\n            axiosInstance.defaults.headers['Authorization'] = null;\r\n\r\n        dispatch({\r\n          \r\n            type: USER_DETAILS_LOGOUT\r\n\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_REMOVE_ALL_ITEM\r\n        })\r\n\r\n        dispatch({\r\n            type:USER_ORDER_EMPTY\r\n        })\r\n        \r\n\r\n        \r\n    }catch(error){\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n\r\nexport const register = (email, \r\n                        first_name,\r\n                        last_name,\r\n                        address,\r\n                        postcode,\r\n                        phone,\r\n                        city,\r\n                        password ) => async(dispatch) => { \r\n    try {\r\n        dispatch({\r\n        type: USER_REGISTER_REQUEST\r\n    })\r\n    const {data} = axiosInstance.post(`http://127.0.0.1:8000/api/user/register/`, {\r\n        email: email,\r\n        first_name: first_name,\r\n        last_name: last_name, \r\n        password: password,\r\n        address: address,\r\n       \r\n         phone: phone,\r\n          city: city,\r\n        postcode: parseInt(postcode),\r\n      \r\n       \r\n      \r\n      \r\n       \r\n\r\n    })\r\n    console.log(data)\r\n       dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data \r\n           \r\n       })\r\n\r\n       dispatch({\r\n        type: USER_LOGIN_REQUEST,\r\n        payload: {email, password}\r\n   })\r\n\r\n\r\n\r\n\r\n    } catch(error){\r\n       console.log(error)\r\n        dispatch({\r\n            \r\n            type: USER_REGISTER_FAIL,\r\n            error: error.response.data && error.response.data.detail\r\n            ? error.response.data.detail : error.message\r\n        })\r\n\r\n        \r\n    }\r\n}\r\n\r\nexport const getUsersDetails =  (id) => async(dispatch, getState) => {\r\n    \r\n    try{\r\n        dispatch({ type: USER_DETAILS_REQUEST})\r\n        const {userLogin: {userInfo},} = getState()\r\n      \r\n       \r\n        const config = {\r\n            headers: {\r\n                'Content-type':  'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n\r\n        }\r\n        console.log(config)\r\n\r\n        const {data} = await axios.get(`http://127.0.0.1:8000/api/user/${id}/`,  config )\r\n\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type : USER_DETAILS_FAIL\r\n          \r\n        })\r\n    }\r\n\r\n\r\n}   \r\nexport const updateUsersProfile =  (user) => async(dispatch, getState) => {\r\n   \r\n    try{\r\n        dispatch({ type: USER_UPDATE_PROFILE_REQUEST})\r\n        const { \r\n            userLogin: {userInfo},} = getState()\r\n            console.log(userInfo.token)\r\n            \r\n        const config =  {\r\n            headers: {\r\n                'Content-type':  'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            }\r\n\r\n        }\r\n        \r\n        \r\n\r\n        const {data} = await axios.put(`http://127.0.0.1:8000/api/user/account-update/`, user, config )\r\n        console.log(data)\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        \r\n\r\n\r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type : USER_UPDATE_PROFILE_FAIL,\r\n            payload:  error.response.data\r\n          \r\n        })\r\n    }\r\n\r\n\r\n}   \r\nexport const removeUserUpdateProfile = (dispatch) => {\r\n    dispatch({\r\n        type: USER_ORDER_EMPTY\r\n    })\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}