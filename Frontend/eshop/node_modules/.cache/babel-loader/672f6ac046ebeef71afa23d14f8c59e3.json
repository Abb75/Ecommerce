{"ast":null,"code":"import axios from \"axios\";\nimport { CART_REMOVE_ALL_ITEM } from \"../constants/cartConstants\";\nimport { USER_ORDER_SUCCESS, USER_ORDER_REQUEST, USER_ORDER_FAIL, USER_ORDER_EMPTY, ORDER_PAY_REQUEST, ORDER_PAY_SUCCESS, ORDER_PAY_FAIL } from \"../constants/orderConstants\";\nexport const createOrderUser = order => async (dispatch, getState) => {\n  console.log(order.user);\n\n  try {\n    dispatch({\n      type: USER_ORDER_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`http://127.0.0.1:8000/api/order/add/`, order, config);\n    dispatch({\n      type: USER_ORDER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_ORDER_FAIL,\n      payload: error.response\n    });\n  }\n};\nexport const removeOrderData = dispatch => {\n  dispatch({\n    type: USER_ORDER_EMPTY\n  });\n};\nexport const payOrder = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`http://127.0.0.1:8000/api/order/${id}/pay/`, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: CART_REMOVE_ALL_ITEM\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: error.response\n    });\n  }\n};","map":{"version":3,"names":["axios","CART_REMOVE_ALL_ITEM","USER_ORDER_SUCCESS","USER_ORDER_REQUEST","USER_ORDER_FAIL","USER_ORDER_EMPTY","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","createOrderUser","order","dispatch","getState","console","log","user","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","response","removeOrderData","payOrder","id","put"],"sources":["C:/Users/Alexandre Brosseau/Desktop/drf_react_eshop/eshop/src/redux/actions/orderActions.js"],"sourcesContent":["import axios from \"axios\"\r\nimport { CART_REMOVE_ALL_ITEM } from \"../constants/cartConstants\"\r\n\r\nimport { USER_ORDER_SUCCESS,\r\n        USER_ORDER_REQUEST,\r\n        USER_ORDER_FAIL,\r\n        USER_ORDER_EMPTY,\r\n        ORDER_PAY_REQUEST,\r\n        ORDER_PAY_SUCCESS,\r\n        ORDER_PAY_FAIL\r\n\r\n} from \"../constants/orderConstants\"\r\n\r\nexport const createOrderUser =  (order) => async(dispatch, getState) => {\r\n    console.log(order.user)\r\n    try{\r\n        dispatch({ type: USER_ORDER_REQUEST})\r\n        const {userLogin: {userInfo},} = getState()\r\n      \r\n      \r\n       \r\n        const config = {\r\n            headers: {\r\n                'Content-type':  'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            }\r\n\r\n        } \r\n        const {data} = await axios.post(`http://127.0.0.1:8000/api/order/add/`, order, config)\r\n        \r\n\r\n        dispatch({\r\n            type: USER_ORDER_SUCCESS,\r\n            payload: data\r\n        })\r\n    }catch(error){\r\n        dispatch({\r\n            type : USER_ORDER_FAIL,\r\n            payload : error.response\r\n          \r\n        })\r\n    }\r\n\r\n\r\n}   \r\nexport const removeOrderData = (dispatch) => {\r\n    dispatch({\r\n        type: USER_ORDER_EMPTY\r\n    })\r\n\r\n}\r\n\r\nexport const payOrder =  (id) => async(dispatch, getState) => {\r\n  \r\n    try{\r\n        dispatch({ type: ORDER_PAY_REQUEST})\r\n        const {userLogin: {userInfo},} = getState()\r\n       \r\n       \r\n        const config = {\r\n            headers: {\r\n                'Content-type':  'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`, \r\n               \r\n            }\r\n\r\n        }\r\n        const {data} = await axios.put(`http://127.0.0.1:8000/api/order/${id}/pay/`,config)\r\n            \r\n        \r\n           \r\n        \r\n        \r\n\r\n        dispatch({\r\n            type: ORDER_PAY_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        dispatch({\r\n            type: CART_REMOVE_ALL_ITEM\r\n        })\r\n\r\n        \r\n\r\n    }catch(error){\r\n        dispatch({\r\n            type : ORDER_PAY_FAIL,\r\n            payload : error.response\r\n          \r\n        })\r\n    }\r\n\r\n}\r\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,QAAqC,4BAArC;AAEA,SAASC,kBAAT,EACQC,kBADR,EAEQC,eAFR,EAGQC,gBAHR,EAIQC,iBAJR,EAKQC,iBALR,EAMQC,cANR,QAQO,6BARP;AAUA,OAAO,MAAMC,eAAe,GAAKC,KAAD,IAAW,OAAMC,QAAN,EAAgBC,QAAhB,KAA6B;EACpEC,OAAO,CAACC,GAAR,CAAYJ,KAAK,CAACK,IAAlB;;EACA,IAAG;IACCJ,QAAQ,CAAC;MAAEK,IAAI,EAAEb;IAAR,CAAD,CAAR;IACA,MAAM;MAACc,SAAS,EAAE;QAACC;MAAD;IAAZ,IAA2BN,QAAQ,EAAzC;IAIA,MAAMO,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,gBAAiB,kBADZ;QAELC,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;MAFnC;IADE,CAAf;IAOA,MAAM;MAACC;IAAD,IAAS,MAAMvB,KAAK,CAACwB,IAAN,CAAY,sCAAZ,EAAmDd,KAAnD,EAA0DS,MAA1D,CAArB;IAGAR,QAAQ,CAAC;MACLK,IAAI,EAAEd,kBADD;MAELuB,OAAO,EAAEF;IAFJ,CAAD,CAAR;EAIH,CApBD,CAoBC,OAAMG,KAAN,EAAY;IACTf,QAAQ,CAAC;MACLK,IAAI,EAAGZ,eADF;MAELqB,OAAO,EAAGC,KAAK,CAACC;IAFX,CAAD,CAAR;EAKH;AAGJ,CA/BM;AAgCP,OAAO,MAAMC,eAAe,GAAIjB,QAAD,IAAc;EACzCA,QAAQ,CAAC;IACLK,IAAI,EAAEX;EADD,CAAD,CAAR;AAIH,CALM;AAOP,OAAO,MAAMwB,QAAQ,GAAKC,EAAD,IAAQ,OAAMnB,QAAN,EAAgBC,QAAhB,KAA6B;EAE1D,IAAG;IACCD,QAAQ,CAAC;MAAEK,IAAI,EAAEV;IAAR,CAAD,CAAR;IACA,MAAM;MAACW,SAAS,EAAE;QAACC;MAAD;IAAZ,IAA2BN,QAAQ,EAAzC;IAGA,MAAMO,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,gBAAiB,kBADZ;QAELC,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;MAFnC;IADE,CAAf;IAQA,MAAM;MAACC;IAAD,IAAS,MAAMvB,KAAK,CAAC+B,GAAN,CAAW,mCAAkCD,EAAG,OAAhD,EAAuDX,MAAvD,CAArB;IAOAR,QAAQ,CAAC;MACLK,IAAI,EAAET,iBADD;MAELkB,OAAO,EAAEF;IAFJ,CAAD,CAAR;IAKAZ,QAAQ,CAAC;MACLK,IAAI,EAAEf;IADD,CAAD,CAAR;EAMH,CA/BD,CA+BC,OAAMyB,KAAN,EAAY;IACTf,QAAQ,CAAC;MACLK,IAAI,EAAGR,cADF;MAELiB,OAAO,EAAGC,KAAK,CAACC;IAFX,CAAD,CAAR;EAKH;AAEJ,CAzCM"},"metadata":{},"sourceType":"module"}