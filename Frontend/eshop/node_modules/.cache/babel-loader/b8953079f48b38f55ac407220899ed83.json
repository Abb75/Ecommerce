{"ast":null,"code":"import { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_SUCCESS, USER_REGISTER_REQUEST } from \"../constants/userConstants\";\nimport axiosInstance from \"../../axios\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const {\n      data\n    } = await axiosInstance.post(`http://127.0.0.1:8000/api/token/`, {\n      email: email,\n      password: password\n    }); //.then((res) => {\n    //console.log(res)\n\n    localStorage.setItem('access_token', data.access);\n    localStorage.setItem('refresh_token', data.refresh);\n    axiosInstance.defaults.headers['Authorization'] = 'JWT' + localStorage.getItem('access_token'); //}  //)\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      error: error.response.data.detail //&& error.response.data.detail\n      // ? error.response.data.detail : error.message\n\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGOUT\n    });\n    const response = axiosInstance.post('http://127.0.0.1:8000/api/user/logout/blacklist/', {\n      refresh_token: localStorage.getItem('refresh_token')\n    });\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('refresh_token');\n    axiosInstance.defaults.headers['Authorization'] = null;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const register = (email, first_name, last_name, address, phone, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const {\n      data\n    } = axiosInstance.post(`http://127.0.0.1:8000/api/user/register/`, {\n      email: email,\n      first_name: first_name,\n      last_name: last_name,\n      address: address,\n      phone: phone,\n      password: password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      error: error.response.data //&& error.response.data.detail\n      // ? error.response.data.detail : error.message\n\n    });\n  }\n};","map":{"version":3,"names":["USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_SUCCESS","USER_REGISTER_REQUEST","axiosInstance","login","email","password","dispatch","type","data","post","localStorage","setItem","access","refresh","defaults","headers","getItem","payload","error","response","detail","logout","refresh_token","removeItem","console","log","register","first_name","last_name","address","phone"],"sources":["C:/Users/Alexandre Brosseau/Desktop/drf_react_eshop/eshop/src/redux/actions/userActions.js"],"sourcesContent":["import { USER_LOGIN_FAIL,\r\n     USER_LOGIN_REQUEST, \r\n     USER_LOGIN_SUCCESS, \r\n     USER_LOGOUT,\r\n\r\n     USER_REGISTER_FAIL,\r\n     USER_REGISTER_SUCCESS,\r\n     USER_REGISTER_REQUEST\r\n    \r\n} from \"../constants/userConstants\"\r\n\r\nimport axiosInstance from \"../../axios\";\r\n\r\n\r\nexport const login = (email, password) => async(dispatch) => { \r\n    try {\r\n        dispatch({\r\n        type: USER_LOGIN_REQUEST\r\n    })\r\n    const {data} = await  axiosInstance.post(`http://127.0.0.1:8000/api/token/`, {\r\n        email: email,\r\n        password: password\r\n        })\r\n     \r\n        //.then((res) => {\r\n            //console.log(res)\r\n            localStorage.setItem('access_token', data.access);\r\n            localStorage.setItem('refresh_token', data.refresh);   \r\n            axiosInstance.defaults.headers['Authorization'] = \r\n                'JWT' + localStorage.getItem('access_token'); \r\n              \r\n         //}  //)\r\n       \r\n       dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data \r\n           \r\n       }\r\n      )\r\n\r\n    } catch(error){\r\n       \r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            error: error.response.data.detail //&& error.response.data.detail\r\n           // ? error.response.data.detail : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => async(dispatch) => {\r\n    try{\r\n        dispatch({\r\n            type: USER_LOGOUT,\r\n        })\r\n        const response = axiosInstance.post('http://127.0.0.1:8000/api/user/logout/blacklist/', {\r\n            refresh_token : localStorage.getItem('refresh_token') , \r\n            \r\n        });\r\n            localStorage.removeItem('access_token');\r\n            localStorage.removeItem('refresh_token');\r\n        \r\n            axiosInstance.defaults.headers['Authorization'] = null;\r\n        \r\n    }catch(error){\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n\r\nexport const register = (email, \r\n                        first_name,\r\n                        last_name,\r\n                        address,\r\n                        phone,\r\n                        password ) => async(dispatch) => { \r\n    try {\r\n        dispatch({\r\n        type: USER_REGISTER_REQUEST\r\n    })\r\n    const {data} = axiosInstance \r\n    .post(`http://127.0.0.1:8000/api/user/register/`, {\r\n        email: email,\r\n        first_name: first_name,\r\n        last_name: last_name,\r\n        address: address,\r\n        phone: phone,\r\n        password: password\r\n\r\n    })\r\n       \r\n       dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data \r\n           \r\n       }\r\n      )\r\n\r\n    } catch(error){\r\n       console.log(error)\r\n        dispatch({\r\n            \r\n            type: USER_REGISTER_FAIL,\r\n            error: error.response.data //&& error.response.data.detail\r\n           // ? error.response.data.detail : error.message\r\n        })\r\n    }\r\n}\r\n\r\n"],"mappings":"AAAA,SAASA,eAAT,EACKC,kBADL,EAEKC,kBAFL,EAGKC,WAHL,EAKKC,kBALL,EAMKC,qBANL,EAOKC,qBAPL,QASO,4BATP;AAWA,OAAOC,aAAP,MAA0B,aAA1B;AAGA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAMC,QAAN,IAAmB;EACzD,IAAI;IACAA,QAAQ,CAAC;MACTC,IAAI,EAAEX;IADG,CAAD,CAAR;IAGJ,MAAM;MAACY;IAAD,IAAS,MAAON,aAAa,CAACO,IAAd,CAAoB,kCAApB,EAAuD;MACzEL,KAAK,EAAEA,KADkE;MAEzEC,QAAQ,EAAEA;IAF+D,CAAvD,CAAtB,CAJI,CASA;IACI;;IACAK,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqCH,IAAI,CAACI,MAA1C;IACAF,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCH,IAAI,CAACK,OAA3C;IACAX,aAAa,CAACY,QAAd,CAAuBC,OAAvB,CAA+B,eAA/B,IACI,QAAQL,YAAY,CAACM,OAAb,CAAqB,cAArB,CADZ,CAbJ,CAgBC;;IAEFV,QAAQ,CAAC;MACJC,IAAI,EAAEV,kBADF;MAEJoB,OAAO,EAAET;IAFL,CAAD,CAAR;EAOF,CAzBD,CAyBE,OAAMU,KAAN,EAAY;IAEVZ,QAAQ,CAAC;MACLC,IAAI,EAAEZ,eADD;MAELuB,KAAK,EAAEA,KAAK,CAACC,QAAN,CAAeX,IAAf,CAAoBY,MAFtB,CAE6B;MACnC;;IAHM,CAAD,CAAR;EAKH;AACJ,CAlCM;AAoCP,OAAO,MAAMC,MAAM,GAAG,MAAM,MAAMf,QAAN,IAAmB;EAC3C,IAAG;IACCA,QAAQ,CAAC;MACLC,IAAI,EAAET;IADD,CAAD,CAAR;IAGA,MAAMqB,QAAQ,GAAGjB,aAAa,CAACO,IAAd,CAAmB,kDAAnB,EAAuE;MACpFa,aAAa,EAAGZ,YAAY,CAACM,OAAb,CAAqB,eAArB;IADoE,CAAvE,CAAjB;IAIIN,YAAY,CAACa,UAAb,CAAwB,cAAxB;IACAb,YAAY,CAACa,UAAb,CAAwB,eAAxB;IAEArB,aAAa,CAACY,QAAd,CAAuBC,OAAvB,CAA+B,eAA/B,IAAkD,IAAlD;EAEP,CAbD,CAaC,OAAMG,KAAN,EAAY;IACTM,OAAO,CAACC,GAAR,CAAYP,KAAZ;EACH;AACJ,CAjBM;AAoBP,OAAO,MAAMQ,QAAQ,GAAG,CAACtB,KAAD,EACAuB,UADA,EAEAC,SAFA,EAGAC,OAHA,EAIAC,KAJA,EAKAzB,QALA,KAKc,MAAMC,QAAN,IAAmB;EACrD,IAAI;IACAA,QAAQ,CAAC;MACTC,IAAI,EAAEN;IADG,CAAD,CAAR;IAGJ,MAAM;MAACO;IAAD,IAASN,aAAa,CAC3BO,IADc,CACR,0CADQ,EACmC;MAC9CL,KAAK,EAAEA,KADuC;MAE9CuB,UAAU,EAAEA,UAFkC;MAG9CC,SAAS,EAAEA,SAHmC;MAI9CC,OAAO,EAAEA,OAJqC;MAK9CC,KAAK,EAAEA,KALuC;MAM9CzB,QAAQ,EAAEA;IANoC,CADnC,CAAf;IAWGC,QAAQ,CAAC;MACJC,IAAI,EAAEP,qBADF;MAEJiB,OAAO,EAAET;IAFL,CAAD,CAAR;EAOF,CAtBD,CAsBE,OAAMU,KAAN,EAAY;IACXM,OAAO,CAACC,GAAR,CAAYP,KAAZ;IACCZ,QAAQ,CAAC;MAELC,IAAI,EAAER,kBAFD;MAGLmB,KAAK,EAAEA,KAAK,CAACC,QAAN,CAAeX,IAHjB,CAGsB;MAC5B;;IAJM,CAAD,CAAR;EAMH;AACJ,CArCM"},"metadata":{},"sourceType":"module"}