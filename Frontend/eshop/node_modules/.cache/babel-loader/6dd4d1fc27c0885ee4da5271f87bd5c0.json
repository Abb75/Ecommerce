{"ast":null,"code":"import axios from \"axios\";\nconst baseUrl = 'http://127.0.0.1:8000/api/';\nconst axiosInstance = axios.create({\n  baseUrl: baseUrl,\n  timeout: 5000,\n  headers: {\n    Authorization: localStorage.getItem('acces_token') ? 'JWT' + localStorage.getItem('access_token') : null,\n    'Content-Type': 'application/json',\n    accept: 'application/json'\n  }\n});\naxiosInstance.interceptors.response.use(response => {\n  return response;\n}, async function (error) {\n  const originalRequest = error.config;\n\n  if (typeof error.response === 'undefined') {\n    alert('Server Off');\n    return Promise.reject(error);\n  }\n\n  if (error.response.status == 401 && originalRequest.url === baseUrl + 'token/refresh/') {\n    window.location.href = '/login/';\n    return Promise.reject(error);\n  }\n\n  if (error.response.data.code === 'token_not_valid' && error.response.status === 401 && error.response.statusText === 'Unauthorized') {\n    const refreshToken = localStorage.getItem('refresh_token');\n\n    if (refreshToken) {\n      const tokenParts = JSON.parse(atob(refreshToken.split('.')[1]));\n      const now = Math.ceil(Date.now() / 1000);\n      console.log(tokenParts.exp);\n\n      if (tokenParts.exp > now) {\n        return axiosInstance.post('http://127.0.0.1:8000/api/token/refresh/', {\n          refresh: refreshToken\n        }).then(response => {\n          localStorage.setItem('access_token', response.data.access);\n          localStorage.setItem('access_token', response.data.refresh);\n          axiosInstance.defaults.headers['Authorization'] = 'JWT ' + response.data.access;\n          originalRequest.headers['Authorization'] = 'JWT ' + response.data.access;\n          return axiosInstance(originalRequest);\n        }).catch(err => {\n          console.log(err);\n        });\n      } else {\n        console.log('refresh token is expired', tokenParts.exp, now);\n        window.location.href = '/login/';\n      }\n    } else {\n      console.log('Refresk token not available');\n      window.location.href = '/login/';\n    }\n  }\n\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","baseUrl","axiosInstance","create","timeout","headers","Authorization","localStorage","getItem","accept","interceptors","response","use","error","originalRequest","config","alert","Promise","reject","status","url","window","location","href","data","code","statusText","refreshToken","tokenParts","JSON","parse","atob","split","now","Math","ceil","Date","console","log","exp","post","refresh","then","setItem","access","defaults","catch","err"],"sources":["C:/Users/Alexandre Brosseau/Desktop/drf_react_eshop/eshop/src/axios.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst baseUrl = 'http://127.0.0.1:8000/api/';\r\n\r\nconst axiosInstance = axios.create({\r\n    baseUrl: baseUrl,\r\n    timeout: 5000,\r\n    headers: {\r\n        Authorization: localStorage.getItem('acces_token')\r\n        ? 'JWT' + localStorage.getItem('access_token')\r\n        : null,\r\n        'Content-Type': 'application/json',\r\n        accept: 'application/json',\r\n    },\r\n});\r\n\r\n\r\naxiosInstance.interceptors.response.use(\r\n    (response) => {\r\n        return response;\r\n\r\n\r\n    },\r\n    async function (error) {\r\n        const originalRequest = error.config;\r\n        if (typeof error.response === 'undefined') {\r\n            alert('Server Off');\r\n        return Promise.reject(error)\r\n        }\r\n\r\n        if ( error.response.status == 401 &&\r\n            originalRequest.url === baseUrl + 'token/refresh/')\r\n    {\r\n        window.location.href = '/login/';\r\n        return Promise.reject(error);\r\n    }\r\n\r\n    if (\r\n        error.response.data.code === 'token_not_valid' &&\r\n        error.response.status === 401 && \r\n        error.response.statusText === 'Unauthorized'\r\n    ) {\r\n        const refreshToken = localStorage.getItem('refresh_token');\r\n    \r\n    \r\n\r\n    if (refreshToken) {\r\n        const tokenParts = JSON.parse(atob(refreshToken.split('.')[1]));\r\n        const now = Math.ceil(Date.now()/1000);\r\n        console.log(tokenParts.exp)\r\n\r\n        if (tokenParts.exp > now) {\r\n            return axiosInstance\r\n            .post('http://127.0.0.1:8000/api/token/refresh/', { refresh: refreshToken})\r\n            .then((response) => {\r\n                localStorage.setItem('access_token', response.data.access);\r\n                localStorage.setItem('access_token', response.data.refresh);\r\n\r\n                axiosInstance.defaults.headers['Authorization'] = \r\n                'JWT ' + response.data.access;\r\n\r\n                originalRequest.headers['Authorization'] = \r\n                'JWT ' + response.data.access;\r\n\r\n                return axiosInstance(originalRequest)\r\n            })\r\n\r\n            .catch((err) => {\r\n                console.log(err)\r\n            });\r\n        } else {\r\n            console.log('refresh token is expired' , tokenParts.exp, now);\r\n            window.location.href = '/login/';\r\n        }\r\n\r\n    }else {\r\n        console.log('Refresk token not available');\r\n        window.location.href = '/login/';\r\n        }\r\n\r\n    }\r\n\r\n     return Promise.reject(error);\r\n\r\n    }\r\n);\r\n\r\nexport default axiosInstance;"],"mappings":"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"},"metadata":{},"sourceType":"module"}